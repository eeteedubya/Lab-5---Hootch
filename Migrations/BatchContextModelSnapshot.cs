// <auto-generated />
using Lab_5___Hootch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab_5___Hootch.Migrations
{
    [DbContext(typeof(BatchContext))]
    partial class BatchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Lab_5___Hootch.Data.Batch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActualYield")
                        .HasColumnType("int");

                    b.Property<int>("AmountOfWash")
                        .HasColumnType("int");

                    b.Property<string>("DateStarted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedFinishDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpectedWashPercent")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedYield")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PercentDiff")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Batch");
                });
#pragma warning restore 612, 618
        }
    }
}
